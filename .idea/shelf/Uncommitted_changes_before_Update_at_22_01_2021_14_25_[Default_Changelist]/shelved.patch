Index: app/src/main/java/com/asa/asri_larisso/Activity/retail/act_checkout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.asa.asri_larisso.Activity.retail;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.asa.asri_larisso.Api.Api;\r\nimport com.asa.asri_larisso.Api.RetrofitClient;\r\nimport com.asa.asri_larisso.R;\r\nimport com.asa.asri_larisso.Response.BaseResponse;\r\nimport com.asa.asri_larisso.Session.Session;\r\nimport com.asa.asri_larisso.Table.Pengiriman;\r\nimport com.midtrans.sdk.corekit.callback.TransactionFinishedCallback;\r\nimport com.midtrans.sdk.corekit.core.MidtransSDK;\r\nimport com.midtrans.sdk.corekit.core.TransactionRequest;\r\nimport com.midtrans.sdk.corekit.core.themes.CustomColorTheme;\r\nimport com.midtrans.sdk.corekit.models.BankType;\r\nimport com.midtrans.sdk.corekit.models.BillingAddress;\r\nimport com.midtrans.sdk.corekit.models.CustomerDetails;\r\nimport com.midtrans.sdk.corekit.models.ExpiryModel;\r\nimport com.midtrans.sdk.corekit.models.ItemDetails;\r\nimport com.midtrans.sdk.corekit.models.ShippingAddress;\r\nimport com.midtrans.sdk.corekit.models.snap.CreditCard;\r\nimport com.midtrans.sdk.corekit.models.snap.TransactionResult;\r\nimport com.midtrans.sdk.uikit.SdkUIFlowBuilder;\r\nimport com.ontbee.legacyforks.cn.pedant.SweetAlert.SweetAlertDialog;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.NumberFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\nimport java.util.TimeZone;\r\n\r\nimport es.dmoral.toasty.Toasty;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class act_checkout extends AppCompatActivity {\r\n\r\n    private ArrayList<String> kd_brg = new ArrayList<>();\r\n    private ArrayList<String> nm_brg = new ArrayList<>();\r\n    private ArrayList<String> hrg_brg = new ArrayList<>();\r\n    private ArrayList<String> hrg_asli = new ArrayList<>();\r\n    private ArrayList<String> qty = new ArrayList<>();\r\n    private ArrayList<String> gambar = new ArrayList<>();\r\n    double total = 0, netto = 0, ongkir_total = 0;\r\n    boolean sts_kurir = false;\r\n    NumberFormat formatRupiah;\r\n    String no_ent, a = \"\";\r\n\r\n    TextView ganti_alamat, total_belanja, ongkir, jumlah_total, harga_ongkir;\r\n    TextView alamat_pengiriman, nama_penerima, no_penerima, nama_voucher, tx_voucher;\r\n    ImageView nama_kurir;\r\n    LinearLayout linear_voucher;\r\n    ListView list_barang;\r\n    Button btn_pengiriman, pilih_pembayaran;\r\n    Spinner servis;\r\n    AdapterCheckout adapterCheckout;\r\n    TextView pilih_voucher;\r\n\r\n    ArrayList<Integer> kurir = new ArrayList<>();\r\n    ArrayList<String> service = new ArrayList<>();\r\n    ArrayList<String> costs = new ArrayList<>();\r\n    ArrayList<String> hrg_ongkir = new ArrayList<>();\r\n    ListView list_pengiriman;\r\n    String tmp_nm_voucher, tmp_kd_voucher;\r\n    double nilai_voucher = 0;\r\n\r\n    // Koordinat Lokasi Penerima\r\n    double initialLat = 0;\r\n    double initialLong = 0;\r\n\r\n    // Koordinat Lokasi Larisso\r\n    double finalLat = -8.3495079;\r\n    double finalLong =  113.6051873;\r\n\r\n    Session session;\r\n    Api api;\r\n    Call<BaseResponse<Pengiriman>> cekOngkir;\r\n    Call<BaseResponse> cekOngkirCod;\r\n    Call<String> getNoEnt;\r\n    Call<BaseResponse> inputPenjualan;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_act_checkout);\r\n\r\n        kd_brg = (ArrayList<String>) getIntent().getSerializableExtra(\"kd_brg\");\r\n        nm_brg = (ArrayList<String>) getIntent().getSerializableExtra(\"nm_brg\");\r\n        hrg_brg = (ArrayList<String>) getIntent().getSerializableExtra(\"hrg_brg\");\r\n        hrg_asli = (ArrayList<String>) getIntent().getSerializableExtra(\"hrg_asli\");\r\n        qty = (ArrayList<String>) getIntent().getSerializableExtra(\"qty\");\r\n        gambar = (ArrayList<String>) getIntent().getSerializableExtra(\"gambar\");\r\n\r\n        total = Double.parseDouble(getIntent().getStringExtra(\"subtot\"));\r\n        Locale localeID = new Locale(\"in\", \"ID\");\r\n        formatRupiah = NumberFormat.getCurrencyInstance(localeID);\r\n        session = new Session(act_checkout.this);\r\n        api = RetrofitClient.createServiceWithAuth(Api.class, session.getToken());\r\n\r\n        ImageView back = findViewById(R.id.back);\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        ganti_alamat = findViewById(R.id.ganti_alamat);\r\n        total_belanja = findViewById(R.id.total_belanja);\r\n        ongkir = findViewById(R.id.ongkir);\r\n        jumlah_total = findViewById(R.id.jumlah_total);\r\n        list_barang = findViewById(R.id.list_pesanan);\r\n        nama_kurir = findViewById(R.id.nama_kurir);\r\n        servis = findViewById(R.id.service);\r\n        harga_ongkir = findViewById(R.id.harga_ongkir);\r\n        btn_pengiriman = findViewById(R.id.btn_pengiriman);\r\n        pilih_pembayaran = findViewById(R.id.pilih_pembayaran);\r\n        pilih_voucher = findViewById(R.id.pilih_voucher);\r\n        nama_voucher = findViewById(R.id.nama_voucher);\r\n        tx_voucher = findViewById(R.id.tx_voucher);\r\n        linear_voucher = findViewById(R.id.linear_voucher);\r\n\r\n        alamat_pengiriman = findViewById(R.id.alamat_pengiriman);\r\n        nama_penerima = findViewById(R.id.nama_penerima);\r\n        no_penerima = findViewById(R.id.no_penerima);\r\n\r\n        alamat_pengiriman.setText(session.getAlamat() + \", \" + session.getKecamatan() + \", \" + session.getKota() + \", \" + session.getProvinsi());\r\n        nama_penerima.setText(session.getNamaPenerima());\r\n        no_penerima.setText(session.getNoTelp());\r\n\r\n        adapterCheckout = new AdapterCheckout(act_checkout.this, kd_brg, nm_brg, qty, hrg_asli, gambar);\r\n        LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, getResources().getDimensionPixelSize(R.dimen.checkout_height) * kd_brg.size());\r\n        list_barang.setLayoutParams(params);\r\n        list_barang.setAdapter(adapterCheckout);\r\n        adapterCheckout.notifyDataSetChanged();\r\n\r\n        total_belanja.setText(\"\" + formatRupiah.format(total).replace(\",00\", \"\"));\r\n\r\n        ganti_alamat.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent it = new Intent(act_checkout.this, act_list_alamat.class);\r\n                it.putExtra(\"pilih\", \"ya\");\r\n                startActivityForResult(it, 0);\r\n            }\r\n        });\r\n\r\n        pilih_voucher.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(act_checkout.this, act_voucher.class);\r\n                intent.putExtra(\"sts\", \"checkout\");\r\n                startActivityForResult(intent, 0);\r\n            }\r\n        });\r\n\r\n        servis.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                harga_ongkir.setText(formatRupiah.format(Double.parseDouble(costs.get(position))).replace(\",00\", \"\"));\r\n                ongkir.setText(formatRupiah.format(Double.parseDouble(costs.get(position))).replace(\",00\", \"\"));\r\n                jumlah_total.setText(formatRupiah.format(Double.parseDouble(costs.get(position)) + total).replace(\",00\", \"\"));\r\n                netto = Double.parseDouble(costs.get(position)) + total;\r\n                ongkir_total = Double.parseDouble(costs.get(position).replace(\",00\", \"\"));\r\n                sts_kurir = true;\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        btn_pengiriman.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pilihPengiriman();\r\n            }\r\n        });\r\n\r\n        getNoEnt();\r\n\r\n        pilih_pembayaran.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (sts_kurir == false) {\r\n                    final SweetAlertDialog dialog = new SweetAlertDialog(act_checkout.this, SweetAlertDialog.WARNING_TYPE);\r\n                    dialog.getProgressHelper().setBarColor(Color.parseColor(\"#A5DC86\"));\r\n                    dialog.setTitleText(\"Silahkan pilih jasa pengiriman terlebih dauhulu !!!\");\r\n                    dialog.setCancelable(false);\r\n                    dialog.show();\r\n                } else {\r\n                    initMidtransSdk();\r\n                    MidtransSDK.getInstance().setTransactionRequest(initTransactionRequest());\r\n                    MidtransSDK.getInstance().startPaymentUiFlow(act_checkout.this);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private TransactionRequest initTransactionRequest() {\r\n        // Create new Transaction Request\r\n\r\n        //set customer details\r\n        TransactionRequest transactionRequest = new TransactionRequest(no_ent, (long) netto);\r\n        transactionRequest.setCustomerDetails(initCustomerDetails());\r\n\r\n        ShippingAddress shippingAddress = new ShippingAddress();\r\n        shippingAddress.setAddress(session.getAlamat());\r\n        shippingAddress.setCity(session.getKota());\r\n        shippingAddress.setPhone(session.getNoTelp());\r\n        shippingAddress.setFirstName(session.getNamaPenerima());\r\n        shippingAddress.setLastName(\"\");\r\n        shippingAddress.setPostalCode(session.getKodePos());\r\n        shippingAddress.setCountryCode(\"id\");\r\n\r\n        BillingAddress billingAddress = new BillingAddress();\r\n        billingAddress.setAddress(session.getAlamat());\r\n        billingAddress.setCity(session.getKota());\r\n        billingAddress.setPhone(session.getNoTelp());\r\n        billingAddress.setFirstName(session.getNamaPenerima());\r\n        billingAddress.setLastName(\"\");\r\n        billingAddress.setPostalCode(session.getKodePos());\r\n        billingAddress.setCountryCode(\"id\");\r\n\r\n        ArrayList<BillingAddress> billingAddressArrayList = new ArrayList<>();\r\n        billingAddressArrayList.add(billingAddress);\r\n        ArrayList<ShippingAddress> shippingAddressArrayList = new ArrayList<>();\r\n        shippingAddressArrayList.add(shippingAddress);\r\n\r\n        transactionRequest.setBillingAddressArrayList(billingAddressArrayList);\r\n        transactionRequest.setShippingAddressArrayList(shippingAddressArrayList);\r\n\r\n        // set item details\r\n        ArrayList<ItemDetails> itemDetailsArrayList = new ArrayList<>();\r\n        ItemDetails itemDetails1 = new ItemDetails(\"ongkir\", (int) ongkir_total, 1, \"ongkir\");\r\n        itemDetailsArrayList.add(itemDetails1);\r\n        for (int i = 0; i < kd_brg.size(); i++) {\r\n            ItemDetails itemDetails = new ItemDetails(kd_brg.get(i), Integer.parseInt(hrg_asli.get(i)), Integer.parseInt(qty.get(i)), nm_brg.get(i));\r\n            itemDetailsArrayList.add(itemDetails);\r\n        }\r\n\r\n        // Add item details into item detail list.\r\n\r\n        transactionRequest.setItemDetails(itemDetailsArrayList);\r\n\r\n        ExpiryModel expiryModel = new ExpiryModel();\r\n        // set start time\r\n        long timeInMili = System.currentTimeMillis();\r\n// format the time\r\n        DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss Z\");\r\n        df.setTimeZone(TimeZone.getTimeZone(\"Asia/Jakarta\"));\r\n// format the time as a string\r\n        String nowAsISO = df.format(new Date(timeInMili));\r\n// set the formatted time to expiry model\r\n        expiryModel.setStartTime(nowAsISO);\r\n        expiryModel.setUnit(ExpiryModel.UNIT_DAY);\r\n        expiryModel.setDuration(1);\r\n\r\n        transactionRequest.setExpiry(expiryModel);\r\n\r\n        CreditCard creditCardOptions = new CreditCard();\r\n// Set to true if you want to save card to Snap\r\n        creditCardOptions.setSaveCard(false);\r\n// Set to true to save card token as `one click` token\r\n        creditCardOptions.setSecure(false);\r\n// Set bank name when using MIGS channel\r\n        creditCardOptions.setBank(BankType.BCA);\r\n// Set MIGS channel (ONLY for BCA, BRI and Maybank Acquiring bank)\r\n        creditCardOptions.setChannel(CreditCard.MIGS);\r\n// Set Credit Card Options\r\n        transactionRequest.setCreditCard(creditCardOptions);\r\n// Set transaction request into SDK instance\r\n        MidtransSDK.getInstance().setTransactionRequest(transactionRequest);\r\n\r\n        return transactionRequest;\r\n    }\r\n\r\n    private CustomerDetails initCustomerDetails() {\r\n\r\n        //define customer detail (mandatory for coreflow)\r\n        ShippingAddress shippingAddress = new ShippingAddress();\r\n        shippingAddress.setAddress(session.getAlamat()+\"\");\r\n        shippingAddress.setCity(session.getKota()+\"\");\r\n        shippingAddress.setPhone(session.getNoTelp()+\"\");\r\n        shippingAddress.setFirstName(session.getNamaPenerima()+\"\");\r\n        shippingAddress.setPostalCode(session.getKodePos()+\"\");\r\n        shippingAddress.setCountryCode(\"id\");\r\n\r\n        BillingAddress billingAddress = new BillingAddress();\r\n        billingAddress.setAddress(session.getAlamat()+\"\");\r\n        billingAddress.setCity(session.getKota()+\"\");\r\n        billingAddress.setPhone(session.getNoTelp()+\"\");\r\n        billingAddress.setFirstName(session.getNamaPenerima()+\"\");\r\n        billingAddress.setPostalCode(session.getKodePos()+\"\");\r\n        billingAddress.setCountryCode(\"id\");\r\n\r\n        CustomerDetails mCustomerDetails = new CustomerDetails(session.getNamaPenerima()+\"\",\"\", session.getEmail()+\"\",session.getNoTelp()+\"\");\r\n        mCustomerDetails.setFirstName(session.getNamaPenerima()+\"\");\r\n        mCustomerDetails.setLastName(\"\");\r\n        mCustomerDetails.setEmail(session.getEmail()+\"\");\r\n        mCustomerDetails.setPhone(session.getNoTelp()+\"\");\r\n//\r\n        System.out.println(session.getNamaPenerima());\r\n        System.out.println(session.getEmail());\r\n        System.out.println(session.getNoTelp());\r\n        System.out.println(session.getAlamat());\r\n        System.out.println(session.getKota());\r\n        System.out.println(session.getKodePos());\r\n\r\n        mCustomerDetails.setBillingAddress(billingAddress);\r\n        mCustomerDetails.setShippingAddress(shippingAddress);\r\n        return mCustomerDetails;\r\n    }\r\n\r\n    private void initMidtransSdk() {\r\n        String client_key = SdkConfig.MERCHANT_CLIENT_KEY;\r\n        String base_url = SdkConfig.MERCHANT_BASE_CHECKOUT_URL;\r\n\r\n        SdkUIFlowBuilder.init()\r\n                .setClientKey(client_key) // client_key is mandatory\r\n                .setContext(act_checkout.this) // context is mandatory\r\n                .setTransactionFinishedCallback(new TransactionFinishedCallback() {\r\n                    @Override\r\n                    public void onTransactionFinished(TransactionResult result) {\r\n                        if (result.getResponse() != null) {\r\n                            switch (result.getStatus()) {\r\n                                case TransactionResult.STATUS_SUCCESS:\r\n                                    Toast.makeText(act_checkout.this, \"Transaction Finished. ID: \" + result.getResponse().getTransactionId(), Toast.LENGTH_LONG).show();\r\n                                    initInputPenjualan(\"1\", result.getResponse().getTransactionId());\r\n                                    break;\r\n                                case TransactionResult.STATUS_PENDING:\r\n                                    Toast.makeText(act_checkout.this, \"Transaction Pending\", Toast.LENGTH_LONG).show();\r\n//                                    System.out.println(\"VA\"+result.getResponse().getAccountNumbers().get(0).getAccountNumber());\r\n//                                    System.out.println(\"Payment type\"+result.getResponse().getPaymentType());\r\n//                                    System.out.println(\"Status code\"+result.getResponse().getStatusCode());\r\n//                                    System.out.println(\"Transaction ID\"+result.getResponse().getTransactionId());\r\n//                                    System.out.println(\"Bank\"+result.getResponse().getAccountNumbers().get(0).getBank());\r\n//                                    System.out.println(\"Expire\"+result.getResponse().getPermataExpiration());\r\n                                    initInputPenjualan(\"0\", result.getResponse().getTransactionId());\r\n\r\n//                                    Intent it = new Intent(act_checkout.this, act_status_pembayaran.class);\r\n//                                    it.putExtra(\"VA\", result.getResponse().getAccountNumbers().get(0).getAccountNumber());\r\n//                                    it.putExtra(\"Payment Type\", result.getResponse().getPaymentType());\r\n//                                    it.putExtra(\"Status Code\", result.getResponse().getStatusCode());\r\n//                                    it.putExtra(\"Transaction ID\", result.getResponse().getTransactionId());\r\n//                                    it.putExtra(\"Bank\", result.getResponse().getAccountNumbers().get(0).getBank());\r\n//                                    it.putExtra(\"Expire\", result.getResponse().getPermataExpiration());\r\n//                                    startActivity(it);\r\n\r\n                                    break;\r\n                                case TransactionResult.STATUS_FAILED:\r\n                                    Toast.makeText(act_checkout.this, \"Transaction Failed. ID: \" + result.getResponse().getTransactionId() + \". Message: \" + result.getResponse().getStatusMessage(), Toast.LENGTH_LONG).show();\r\n                                    break;\r\n                            }\r\n                            result.getResponse().getValidationMessages();\r\n                        } else if (result.isTransactionCanceled()) {\r\n                            Toast.makeText(act_checkout.this, \"Transaction Canceled\", Toast.LENGTH_LONG).show();\r\n                        } else {\r\n                            if (result.getStatus().equalsIgnoreCase(TransactionResult.STATUS_INVALID)) {\r\n                                Toast.makeText(act_checkout.this, \"Transaction Invalid\", Toast.LENGTH_LONG).show();\r\n                            } else {\r\n                                Toast.makeText(act_checkout.this, \"Transaction Finished with failure.\", Toast.LENGTH_LONG).show();\r\n                            }\r\n                        }\r\n                    }\r\n                }) // set transaction finish callback (sdk callback)\r\n                .setMerchantBaseUrl(base_url) //set merchant url (required)\r\n                .enableLog(true) // enable sdk log (optional)\r\n                .setColorTheme(new CustomColorTheme(\"#FF983C\", \"#FF983C\", \"#EF4B4B\")) // set theme. it will replace theme on snap theme on MAP ( optional)\r\n                .buildSDK();\r\n    }\r\n\r\n    public void pilihPengiriman() {\r\n        final Dialog dialog = new Dialog(act_checkout.this);\r\n        dialog.setTitle(\"Gambar Barang\");\r\n        View v = getLayoutInflater().inflate(R.layout.popup_pilih_pengiriman, null);\r\n        dialog.setContentView(v);\r\n        ImageView close = v.findViewById(R.id.close);\r\n        kurir.clear();\r\n        kurir.add(R.drawable.logo_jne);\r\n        kurir.add(R.drawable.logo_jnt);\r\n        kurir.add(R.drawable.logo_pos);\r\n        kurir.add(R.drawable.rt_checkout_cod);\r\n//        ArrayAdapter<Integer> adapter = new ArrayAdapter<>(act_checkout.this, android.R.layout.simple_expandable_list_item_1, kurir);\r\n//        adapter.setDropDownViewResource(R.layout.spinner_kurir);\r\n        AdapterKurir adapter = new AdapterKurir(act_checkout.this, kurir);\r\n        list_pengiriman = v.findViewById(R.id.list_pengiriman);\r\n        list_pengiriman.setAdapter(adapter);\r\n\r\n        close.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        list_pengiriman.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                if (position == 0) {\r\n                    a = \"jne\";\r\n                    nama_kurir.setImageResource(R.drawable.logo_jne);\r\n                    getOngkir(\"160\", session.getKdKecamatan(), \"1000\", a);\r\n                } else if (position == 1) {\r\n                    nama_kurir.setImageResource(R.drawable.logo_jnt);\r\n                    a = \"jnt\";\r\n                    getOngkir(\"160\", session.getKdKecamatan(), \"1000\", a);\r\n                } else if (position == 2) {\r\n                    nama_kurir.setImageResource(R.drawable.logo_pos);\r\n                    a = \"pos\";\r\n                    getOngkir(\"160\", session.getKdKecamatan(), \"1000\", a);\r\n                } else {\r\n                    nama_kurir.setImageResource(R.drawable.rt_checkout_cod);\r\n                    a = \"cod\";\r\n\r\n                    initialLat = Double.parseDouble(session.getLat());\r\n                    initialLong = Double.parseDouble(session.getLong());\r\n                    Double hasil = CalculationByDistance(initialLat, initialLong, finalLat, finalLong);\r\n//                    Double hasil1 = toRadians(hasil);\r\n                    if (session.getLat().equals(\"0\") || session.getLong().equals(\"0\")) {\r\n                        Toasty.error(act_checkout.this, \"Maaf lokasi Anda error\", Toast.LENGTH_SHORT).show();\r\n                        nama_kurir.setImageResource(R.drawable.logo_jne);\r\n                        getOngkir(\"160\", session.getKdKecamatan(), \"1000\", a);\r\n                    } else {\r\n                        System.out.println(Math.round(hasil)+\"km\");\r\n                        getOngkirCod(Math.round(hasil)+\"\");\r\n                    }\r\n                }\r\n\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    public void getOngkir(String asal, String destinasi, String berat, String kurir) {\r\n        cekOngkir = api.cekOngkir(asal, destinasi, berat, kurir);\r\n        cekOngkir.enqueue(new Callback<BaseResponse<Pengiriman>>() {\r\n            @Override\r\n            public void onResponse(Call<BaseResponse<Pengiriman>> call, Response<BaseResponse<Pengiriman>> response) {\r\n                if (response.isSuccessful()) {\r\n                    service.clear();\r\n                    costs.clear();\r\n\r\n                    for (int i = 0; i < response.body().getData().size(); i++) {\r\n                        System.out.println(i);\r\n                        service.add(response.body().getData().get(i).getDescription() + \" (est \" + response.body().getData().get(i).getCost().get(0).getEtd() + \" hari)\");\r\n                        costs.add(response.body().getData().get(i).getCost().get(0).getValue().toString());\r\n                    }\r\n\r\n                    System.out.println(service);\r\n                    System.out.println(costs);\r\n                    //Ini buat ngisi Spinner\r\n                    ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(act_checkout.this, R.layout.spinner_pengiriman, service);\r\n                    arrayAdapter.setDropDownViewResource(R.layout.spinner_pengiriman);\r\n                    servis.setAdapter(arrayAdapter);\r\n                    //End isi spinner\r\n                } else {\r\n                    Toasty.error(act_checkout.this, \"Data Tidak Ditemukan !!!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<BaseResponse<Pengiriman>> call, Throwable t) {\r\n                Toasty.error(act_checkout.this, \"Error \" + t.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void getOngkirCod(final String jarak) {\r\n        cekOngkirCod = api.cekOngkirCod(jarak);\r\n        cekOngkirCod.enqueue(new Callback<BaseResponse>() {\r\n            @Override\r\n            public void onResponse(Call<BaseResponse> call, Response<BaseResponse> response) {\r\n                if (response.isSuccessful()) {\r\n                    service.clear();\r\n                    costs.clear();\r\n\r\n                    service.add(\"Next Day (\"+jarak+\" km)\");\r\n                    costs.add(response.body().getMessage());\r\n\r\n                    System.out.println(service);\r\n                    System.out.println(costs);\r\n                    //Ini buat ngisi Spinner\r\n                    ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(act_checkout.this, R.layout.spinner_pengiriman, service);\r\n                    arrayAdapter.setDropDownViewResource(R.layout.spinner_pengiriman);\r\n                    servis.setAdapter(arrayAdapter);\r\n                    //End isi spinner\r\n                } else {\r\n                    Toasty.error(act_checkout.this, \"Data Tidak Ditemukan !!!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<BaseResponse> call, Throwable t) {\r\n                Toasty.error(act_checkout.this, \"Error \" + t.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void getNoEnt() {\r\n        getNoEnt = api.getNoEnt(session.getIdUser());\r\n        getNoEnt.enqueue(new Callback<String>() {\r\n            @Override\r\n            public void onResponse(Call<String> call, Response<String> response) {\r\n                if (response.isSuccessful()) {\r\n                    no_ent = response.body();\r\n                    System.out.println(no_ent);\r\n                } else {\r\n                    Toasty.error(act_checkout.this, \"Error, Data Tidak Ditemukan !!!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<String> call, Throwable t) {\r\n                Toasty.error(act_checkout.this, \"Data Tidak Ditemukan !!!\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void initInputPenjualan(String sts_bayar, String transaction_id) {\r\n        String kode_barang = TextUtils.join(\";\", kd_brg);\r\n        String nama_barang = TextUtils.join(\";\", nm_brg);\r\n        String harga_barang = TextUtils.join(\";\", hrg_asli);\r\n        String quantity = TextUtils.join(\";\", qty);\r\n\r\n        System.out.println(kode_barang);\r\n        System.out.println(nama_barang);\r\n        System.out.println(harga_barang);\r\n        System.out.println(quantity);\r\n        inputPenjualan = api.inputPenjualan(no_ent, session.getIdUser(), nama_penerima.getText().toString(), alamat_pengiriman.getText().toString(),\r\n                no_penerima.getText().toString(), total+\"\", \"\", \"\", \"\", \"\", netto+\"\",\r\n                ongkir_total+\"\", a+\"\", \"\", kode_barang, nama_barang, harga_barang, quantity, \"pcs\", \"RETAIL\", sts_bayar, transaction_id);\r\n        inputPenjualan.enqueue(new Callback<BaseResponse>() {\r\n            @Override\r\n            public void onResponse(Call<BaseResponse> call, Response<BaseResponse> response) {\r\n                if (response.isSuccessful()) {\r\n                    startActivity(new Intent(act_checkout.this, act_home_retail.class));\r\n                    finish();\r\n                } else {\r\n                    Toasty.error(act_checkout.this, \"Error, Input Data Gagal !!!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<BaseResponse> call, Throwable t) {\r\n                Toasty.error(act_checkout.this, t.getMessage()+\"\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 0) {\r\n            if (resultCode == 1) {\r\n                alamat_pengiriman.setText(data.getStringExtra(\"alamat\"));\r\n                nama_penerima.setText(data.getStringExtra(\"nama_penerima\"));\r\n                no_penerima.setText(data.getStringExtra(\"no_telp_penerima\"));\r\n                nama_kurir.setImageResource(0);\r\n                service.clear();\r\n                costs.clear();\r\n                ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(act_checkout.this, R.layout.spinner_pengiriman, service);\r\n                arrayAdapter.setDropDownViewResource(R.layout.spinner_pengiriman);\r\n                servis.setAdapter(arrayAdapter);\r\n                harga_ongkir.setText(\"\");\r\n                ongkir.setText(\"\");\r\n                jumlah_total.setText(formatRupiah.format(Double.parseDouble(\"0\") + total).replace(\",00\", \"\"));\r\n                netto = Double.parseDouble(\"0\") + total;\r\n                ongkir_total = Double.parseDouble(\"0\");\r\n                sts_kurir = false;\r\n            } else if (resultCode == 2) {\r\n                tx_voucher.setVisibility(View.GONE);\r\n                linear_voucher.setVisibility(View.VISIBLE);\r\n                tmp_nm_voucher = data.getStringExtra(\"nama_voucher\");\r\n                tmp_kd_voucher = data.getStringExtra(\"kd_voucher\");\r\n                nilai_voucher = Double.parseDouble(data.getStringExtra(\"nilai_voucher\"));\r\n                nama_voucher.setText(tmp_nm_voucher);\r\n            }\r\n        }\r\n    }\r\n\r\n    public double CalculationByDistance(double initialLat, double initialLong, double finalLat, double finalLong){\r\n        int R = 6371; // km (Earth radius)\r\n        double dLat = toRadians(finalLat-initialLat);\r\n        double dLon = toRadians(finalLong-initialLong);\r\n        initialLat = toRadians(initialLat);\r\n        finalLat = toRadians(finalLat);\r\n\r\n        double a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(initialLat) * Math.cos(finalLat);\r\n        double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n        return R * c;\r\n    }\r\n\r\n    public double toRadians(double deg) {\r\n        return deg * (Math.PI/180);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asa/asri_larisso/Activity/retail/act_checkout.java	(revision b1229fa032e976c21da82d9f0bad12fa0faff56f)
+++ app/src/main/java/com/asa/asri_larisso/Activity/retail/act_checkout.java	(date 1611296317998)
@@ -222,7 +222,8 @@
         // Create new Transaction Request
 
         //set customer details
-        TransactionRequest transactionRequest = new TransactionRequest(no_ent, (long) netto);
+//        TransactionRequest transactionRequest = new TransactionRequest(no_ent, (long) netto);
+        TransactionRequest transactionRequest = new TransactionRequest(System.currentTimeMillis() + "", (long) netto);
         transactionRequest.setCustomerDetails(initCustomerDetails());
 
         ShippingAddress shippingAddress = new ShippingAddress();
@@ -347,27 +348,31 @@
                             switch (result.getStatus()) {
                                 case TransactionResult.STATUS_SUCCESS:
                                     Toast.makeText(act_checkout.this, "Transaction Finished. ID: " + result.getResponse().getTransactionId(), Toast.LENGTH_LONG).show();
-                                    initInputPenjualan("1", result.getResponse().getTransactionId());
+//                                    initInputPenjualan("1", result.getResponse().getTransactionId());
+                                    System.out.println("Payment type"+result.getResponse().getPaymentType());
+                                    System.out.println("Status code"+result.getResponse().getStatusCode());
+                                    System.out.println("Transaction ID"+result.getResponse().getTransactionId());
+                                    System.out.println("Bank"+result.getResponse().getBank());
+                                    System.out.println("Expire"+result.getResponse().getPermataExpiration());
+                                    String bank = result.getResponse().getBank();
+                                    if (!TextUtils.isEmpty(bank)) {
+                                        if (bank.equals("bca")) {
+
+                                        } else if (bank.equals("permata")) {
+
+                                        } else if (bank.equals("mandiri")) {
+
+                                        }
+                                    }
                                     break;
                                 case TransactionResult.STATUS_PENDING:
                                     Toast.makeText(act_checkout.this, "Transaction Pending", Toast.LENGTH_LONG).show();
-//                                    System.out.println("VA"+result.getResponse().getAccountNumbers().get(0).getAccountNumber());
-//                                    System.out.println("Payment type"+result.getResponse().getPaymentType());
-//                                    System.out.println("Status code"+result.getResponse().getStatusCode());
-//                                    System.out.println("Transaction ID"+result.getResponse().getTransactionId());
-//                                    System.out.println("Bank"+result.getResponse().getAccountNumbers().get(0).getBank());
-//                                    System.out.println("Expire"+result.getResponse().getPermataExpiration());
-                                    initInputPenjualan("0", result.getResponse().getTransactionId());
-
-//                                    Intent it = new Intent(act_checkout.this, act_status_pembayaran.class);
-//                                    it.putExtra("VA", result.getResponse().getAccountNumbers().get(0).getAccountNumber());
-//                                    it.putExtra("Payment Type", result.getResponse().getPaymentType());
-//                                    it.putExtra("Status Code", result.getResponse().getStatusCode());
-//                                    it.putExtra("Transaction ID", result.getResponse().getTransactionId());
-//                                    it.putExtra("Bank", result.getResponse().getAccountNumbers().get(0).getBank());
-//                                    it.putExtra("Expire", result.getResponse().getPermataExpiration());
-//                                    startActivity(it);
-
+//                                    initInputPenjualan("0", result.getResponse().getTransactionId());
+                                    System.out.println("Payment type"+result.getResponse().getPaymentType());
+                                    System.out.println("Status code"+result.getResponse().getStatusCode());
+                                    System.out.println("Transaction ID"+result.getResponse().getTransactionId());
+                                    System.out.println("Bank"+result.getResponse());
+                                    System.out.println("Expire"+result.getResponse().getPermataExpiration());
                                     break;
                                 case TransactionResult.STATUS_FAILED:
                                     Toast.makeText(act_checkout.this, "Transaction Failed. ID: " + result.getResponse().getTransactionId() + ". Message: " + result.getResponse().getStatusMessage(), Toast.LENGTH_LONG).show();
